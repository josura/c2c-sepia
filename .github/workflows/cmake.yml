name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v1.0.3
      id: cache-dependencies
      with:
        path: "~/Dependencies"
        key: armadillo-11.4.3
    - name: Download dependencies
      env:
        CACHE_HIT: ${{steps.cache-dependencies.outputs.cache-hit}}
      run:  |
        sudo apt-get update
        sudo apt-cache search blas && sudo apt-get install -y libblas-dev
        sudo apt-get install -y liblapack-dev liblapacke-dev
        sudo apt-get install -y libarpack2-dev 
        sudo apt-get install -y libsuperlu-dev 
        sudo apt-get install -y libboost-all-dev
        sudo apt-get install libitpp-dev libidn11-dev libkrb5-dev libldap2-dev librtmp-dev libssh2-1-dev
        wget http://sourceforge.net/projects/arma/files/armadillo-11.4.3.tar.xz && tar -xvf armadillo-11.4.3.tar.xz 
        cd armadillo-11.4.3 && ./configure && make && sudo make install
        #sudo apt-get install -y libarmadillo-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        #cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} 

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

